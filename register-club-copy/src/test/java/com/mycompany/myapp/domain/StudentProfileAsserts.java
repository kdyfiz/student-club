package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudentProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAllPropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertStudentProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAllUpdatablePropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertStudentProfileUpdatableFieldsEquals(expected, actual);
        assertStudentProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAutoGeneratedPropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertThat(actual)
            .as("Verify StudentProfile auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileUpdatableFieldsEquals(StudentProfile expected, StudentProfile actual) {
        assertThat(actual)
            .as("Verify StudentProfile relevant properties")
            .satisfies(a -> assertThat(a.getStudentId()).as("check studentId").isEqualTo(expected.getStudentId()))
            .satisfies(a -> assertThat(a.getFullName()).as("check fullName").isEqualTo(expected.getFullName()))
            .satisfies(a -> assertThat(a.getGrade()).as("check grade").isEqualTo(expected.getGrade()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileUpdatableRelationshipsEquals(StudentProfile expected, StudentProfile actual) {
        assertThat(actual)
            .as("Verify StudentProfile relationships")
            .satisfies(a ->
                assertThat(a.getStudentClubRegistration())
                    .as("check studentClubRegistration")
                    .isEqualTo(expected.getStudentClubRegistration())
            );
    }
}
