package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudentClubRegistrationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentClubRegistrationAllPropertiesEquals(StudentClubRegistration expected, StudentClubRegistration actual) {
        assertStudentClubRegistrationAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentClubRegistrationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentClubRegistrationAllUpdatablePropertiesEquals(
        StudentClubRegistration expected,
        StudentClubRegistration actual
    ) {
        assertStudentClubRegistrationUpdatableFieldsEquals(expected, actual);
        assertStudentClubRegistrationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentClubRegistrationAutoGeneratedPropertiesEquals(
        StudentClubRegistration expected,
        StudentClubRegistration actual
    ) {
        assertThat(actual)
            .as("Verify StudentClubRegistration auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentClubRegistrationUpdatableFieldsEquals(
        StudentClubRegistration expected,
        StudentClubRegistration actual
    ) {
        assertThat(actual)
            .as("Verify StudentClubRegistration relevant properties")
            .satisfies(a -> assertThat(a.getRegistrationDate()).as("check registrationDate").isEqualTo(expected.getRegistrationDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentClubRegistrationUpdatableRelationshipsEquals(
        StudentClubRegistration expected,
        StudentClubRegistration actual
    ) {
        assertThat(actual)
            .as("Verify StudentClubRegistration relationships")
            .satisfies(a -> assertThat(a.getClub()).as("check club").isEqualTo(expected.getClub()));
    }
}
